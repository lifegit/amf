var __reflect = this && this.__reflect || function (t, e, r) {
    t.__class__ = e,
    r ? r.push(e) : r = [e],
    t.__types__ = t.__types__ ? r.concat(t.__types__) : r
}, __extends = this && this.__extends || function (t, e) {
    function r() {
        this.constructor = t
    }
    for (var i in e)
        e.hasOwnProperty(i) && (t[i] = e[i]);
    r.prototype = e.prototype,
    t.prototype = new r
}, amf;
!function (t) {
    var e = {
        EMPTY_STRING: "",
        NULL_STRING: "null",
        UNDEFINED_TYPE: 0,
        NULL_TYPE: 1,
        FALSE_TYPE: 2,
        TRUE_TYPE: 3,
        INTEGER_TYPE: 4,
        DOUBLE_TYPE: 5,
        STRING_TYPE: 6,
        XML_TYPE: 7,
        DATE_TYPE: 8,
        ARRAY_TYPE: 9,
        OBJECT_TYPE: 10,
        XMLSTRING_TYPE: 11,
        BYTEARRAY_TYPE: 12,
        AMF0_AMF3: 17,
        UINT29_MASK: 536870911,
        INT28_MAX_VALUE: 268435455,
        INT28_MIN_VALUE: -268435456,
        CLASS_ALIAS: "_explicitType",
        EXTERNALIZED_FIELD: "_externalizedData"
    },
    r = function () {
        function t() {
            this._explicitType = "flex.messaging.io.amf.ActionMessage",
            this.version = 3,
            this.headers = [],
            this.bodies = []
        }
        return t
    }
    ();
    t.ActionMessage = r,
    __reflect(r.prototype, "amf.ActionMessage");
    var i = function () {
        function t() {
            this.targetURI = "null",
            this.responseURI = "/1",
            this.data = []
        }
        return t
    }
    ();
    t.MessageBody = i,
    __reflect(i.prototype, "amf.MessageBody");
    var n = function () {
        function t() {
            this.name = "",
            this.mustUnderstand = !1,
            this.data = null
        }
        return t
    }
    ();
    t.MessageHeader = n,
    __reflect(n.prototype, "amf.MessageHeader");
    var s = function () {
        function t() {
            this._explicitType = "flex.messaging.messages.CommandMessage",
            this.destination = "",
            this.operation = 5,
            this.clientId = null
        }
        return t
    }
    ();
    t.CommandMessage = s,
    __reflect(s.prototype, "amf.CommandMessage");
    var a = function () {
        function t() {
            this._explicitType = "flex.messaging.messages.RemotingMessagee",
            this.destination = "",
            this.source = "",
            this.operation = "",
            this.body = [],
            this.headers = {
                DSId: "nil"
            },
            this.clientId = null
        }
        return t
    }
    ();
    t.RemotingMessage = a,
    __reflect(a.prototype, "amf.RemotingMessage");
    var o = function () {
        function t() {
            this._explicitType = "flex.messaging.messages.AcknowledgeMessage",
            this.body = null,
            this.headers = [],
            this.messageId = null,
            this.clientId = null
        }
        return t
    }
    ();
    t.AcknowledgeMessage = o,
    __reflect(o.prototype, "amf.AcknowledgeMessage");
    var h = function () {
        function t(t, e, r, i, n, s, a) {
            this.source = t,
            this.operation = e,
            this.params = r,
            this.onResult = i,
            this.onStatus = n,
            this.token = s,
            this.holdQueue = a
        }
        return t
    }
    ();
    t.Request = h,
    __reflect(h.prototype, "amf.Request");
    var f = function () {
        function t() {
            this.write = function (t) {
                this.data.push(t)
            },
            this.writeShort = function (t) {
                this.write(t >>> 8 & 255),
                this.write(t >>> 0 & 255)
            },
            this.writeUTF = function (t, e) {
                var r,
                i,
                n,
                s,
                a;
                for (s = t.length, a = 0, n = 0; s > n; n++)
                    i = t.charCodeAt(n), i > 0 && 128 > i ? a++ : a += i > 2047 ? 3 : 2;
                for (r = [], e ? this.writeUInt29(a << 1 | 1) : (r.push(a >>> 8 & 255), r.push(255 & a)), n = 0; s > n; n++)
                    i = t.charCodeAt(n), i > 0 && 128 > i ? r.push(i) : i > 2047 ? (r.push(224 | i >> 12), r.push(128 | i >> 6 & 63), e ? r.push(128 | i >> 0 & 63) : r.push(128 | 63 & i)) : (r.push(192 | i >> 6), e ? r.push(128 | i >> 0 & 63) : r.push(128 | 63 & i));
                return this.writeAll(r),
                e ? a : a + 2
            },
            this.writeUInt29 = function (t) {
                if (128 > t)
                    this.write(t);
                else if (16384 > t)
                    this.write(t >> 7 & 127 | 128), this.write(127 & t);
                else if (2097152 > t)
                    this.write(t >> 14 & 127 | 128), this.write(t >> 7 & 127 | 128), this.write(127 & t);
                else {
                    if (!(1073741824 > t))
                        throw "Integer out of range: " + t;
                    this.write(t >> 22 & 127 | 128),
                    this.write(t >> 15 & 127 | 128),
                    this.write(t >> 8 & 127 | 128),
                    this.write(255 & t)
                }
            },
            this.writeAll = function (t) {
                for (var e = 0; e < t.length; e++){
                    this.write(t[e])
                }

            },
            this.writeBoolean = function (t) {
                this.write(t ? 1 : 0)
            },
            this.writeInt = function (t) {
                this.write(t >>> 24 & 255),
                this.write(t >>> 16 & 255),
                this.write(t >>> 8 & 255),
                this.write(t >>> 0 & 255)
            },
            this.writeUnsignedInt = function (t) {
                0 > t && (t =  - (4294967295 ^ t) - 1),
                t &= 4294967295,
                this.write(t >> 24 & 255),
                this.write(t >> 16 & 255),
                this.write(t >> 8 & 255),
                this.write(255 & t)
            },
            this._getDouble = function (t) {
                var e = [0, 0];
                if (t != t)
                    return e[0] = -524288, e;
                var r = 0 > t || 0 === t && 0 > 1 / t ? -2147483648 : 0,
                t = Math.abs(t);
                if (t === Number.POSITIVE_INFINITY)
                    return e[0] = 2146435072 | r, e;
                for (var i = 0; t >= 2 && 1023 >= i; )
                    i++, t /= 2;
                for (; 1 > t && i >= -1022; )
                    i--, t *= 2;
                if (i += 1023, 2047 == i)
                    return e[0] = 2146435072 | r, e;
                var n;
                return 0 == i ? (n = t * Math.pow(2, 23) / 2, t = Math.round(t * Math.pow(2, 52) / 2)) : (n = t * Math.pow(2, 20) - Math.pow(2, 20), t = Math.round(t * Math.pow(2, 52) - Math.pow(2, 52))),
                e[0] = r | i << 20 & 2147418112 | 1048575 & n,
                e[1] = t,
                e
            },
            this.writeDouble = function (t) {
                t = this._getDouble(t),
                this.writeUnsignedInt(t[0]),
                this.writeUnsignedInt(t[1])
            },
            this.getResult = function () {
                return this.data.join("")
            },
            this.reset = function () {
                this.objects = [],
                this.objectCount = 0,
                this.traits = {},
                this.traitCount = 0,
                this.strings = {},
                this.stringCount = 0
            },
            this.writeStringWithoutType = function (t) {
                0 == t.length ? this.writeUInt29(1) : this.stringByReference(t) || this.writeUTF(t, !0)
            },
            this.stringByReference = function (t) {
                var e = this.strings[t];
                return e ? this.writeUInt29(e << 1) : this.strings[t] = this.stringCount++,
                e
            },
            this.objectByReference = function (t) {
                for (var e = 0, r = !1; e < this.objects.length; e++)
                    if (this.objects[e] === t) {
                        r = !0;
                        break
                    }
                return r ? this.writeUInt29(e << 1) : (this.objects.push(t), this.objectCount++),
                r ? e : null
            },
            this.traitsByReference = function (t, e) {
                for (var r = e + "|", i = 0; i < t.length; i++)
                    r += t[i] + "|";
                var n = this.traits[r];
                return n ? this.writeUInt29(n << 2 | 1) : this.traits[r] = this.traitCount++,
                n
            },
            this.writeAmfInt = function (t) {
                t >= e.INT28_MIN_VALUE && t <= e.INT28_MAX_VALUE ? (t &= e.UINT29_MASK, this.write(e.INTEGER_TYPE), this.writeUInt29(t)) : (this.write(e.DOUBLE_TYPE), this.writeDouble(t))
            },
            this.writeDate = function (t) {
                this.write(e.DATE_TYPE),
                this.objectByReference(t) || (this.writeUInt29(1), this.writeDouble(t.getTime()))
            },
            this.writeObject = function (t) {
                return null == t ? void this.write(e.NULL_TYPE) : void(t.constructor === String ? (this.write(e.STRING_TYPE), this.writeStringWithoutType(t)) : t.constructor === Number ? t === +t && t === (0 | t) ? this.writeAmfInt(t) : (this.write(e.DOUBLE_TYPE), this.writeDouble(t)) : t.constructor === Boolean ? this.write(t ? e.TRUE_TYPE : e.FALSE_TYPE) : t.constructor === Date ? this.writeDate(t) : t.constructor === Array ? this.writeArray(t) : e.CLASS_ALIAS in t ? this.writeCustomObject(t) : this.writeMap(t))
            },
            this.writeCustomObject = function (t) {
                if (this.write(e.OBJECT_TYPE), !this.objectByReference(t))
                    for (var r = this.writeTraits(t), i = 0; i < r.length; i++) {
                        var n = r[i];
                        this.writeObject(t[n])
                    }
            },
            this.writeTraits = function (t) {
                var r = [],
                i = 0,
                n = !1,
                s = !1;
                for (var a in t)
                    a != e.CLASS_ALIAS && (r.push(a), i++);
                if (!this.traitsByReference(r, t[e.CLASS_ALIAS]) && (this.writeUInt29(3 | (n ? 4 : 0) | (s ? 8 : 0) | i << 4), this.writeStringWithoutType(t[e.CLASS_ALIAS]), i > 0))
                    for (var o in r)
                        this.writeStringWithoutType(r[o]);
                return r
            },
            this.writeMap = function (t) {
                if (this.write(e.OBJECT_TYPE), !this.objectByReference(t)) {
                    this.writeUInt29(11),
                    this.traitCount++,
                    this.writeStringWithoutType(e.EMPTY_STRING);
                    for (var r in t)
                        r ? this.writeStringWithoutType(r) : this.writeStringWithoutType(e.EMPTY_STRING), this.writeObject(t[r]);
                    this.writeStringWithoutType(e.EMPTY_STRING)
                }
            },
            this.writeArray = function (t) {
                if (this.write(e.ARRAY_TYPE), !this.objectByReference(t) && (this.writeUInt29(t.length << 1 | 1), this.writeUInt29(1), t.length > 0))
                    for (var r = 0; r < t.length; r++)
                        this.writeObject(t[r])
            },
            this.data = [],
            this.objects = [],
            this.traits = {},
            this.strings = {},
            this.stringCount = 0,
            this.traitCount = 0,
            this.objectCount = 0
        }
        return t
    }
    ();
    t.Writer = f,
    __reflect(f.prototype, "amf.Writer");
    var u = function () {
        function t(t) {
            this.read = function () {
                return this.data[this.pos++]
            },
            this.readUnsignedShort = function () {
                var t = this.read(),
                e = this.read();
                return (t << 8) + (e << 0)
            },
            this.readUInt29 = function () {
                var t = 255 & this.read();
                if (128 > t)
                    return t;
                var e = (127 & t) << 7;
                return t = 255 & this.read(),
                128 > t ? e | t : (e = (e | 127 & t) << 7, t = 255 & this.read(), 128 > t ? e | t : (e = (e | 127 & t) << 8, t = 255 & this.read(), e | t))
            },
            this.readFully = function (t, e, r) {
                for (var i = e; r > i; i++)
                    t[i] = this.read()
            },
            this.readUTF = function (t) {
                for (var e, r, i, n = t ? t : this.readUnsignedShort(), s = [], a = this.pos; this.pos < a + n; )
                    switch (e = this.read(), e >> 4) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                        s.push(String.fromCharCode(e));
                        break;
                    case 12:
                    case 13:
                        r = this.read(),
                        s.push(String.fromCharCode((31 & e) << 6 | 63 & r));
                        break;
                    case 14:
                        r = this.read(),
                        i = this.read(),
                        s.push(String.fromCharCode((15 & e) << 12 | (63 & r) << 6 | (63 & i) << 0));
                        break;
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    }
                return s.join("")
            },
            this.reset = function () {
                this.objects = [],
                this.traits = [],
                this.strings = []
            },
            this.readObject = function () {
                var t = this.read();
                return this.readObjectValue(t)
            },
            this.readString = function () {
                var t = this.readUInt29();
                if (0 == (1 & t))
                    return this.getString(t >> 1);
                var r = t >> 1;
                if (0 == r)
                    return e.EMPTY_STRING;
                var i = this.readUTF(r);
                return this.rememberString(i),
                i
            },
            this.rememberString = function (t) {
                this.strings.push(t)
            },
            this.getString = function (t) {
                return this.strings[t]
            },
            this.getObject = function (t) {
                return this.objects[t]
            },
            this.getTraits = function (t) {
                return this.traits[t]
            },
            this.rememberTraits = function (t) {
                this.traits.push(t)
            },
            this.rememberObject = function (t) {
                this.objects.push(t)
            },
            this.readTraits = function (t) {
                if (1 == (3 & t))
                    return this.getTraits(t >> 2);
                var r = t >> 4,
                i = this.readString(),
                n = {};
                null != i && "" != i && (n[e.CLASS_ALIAS] = i),
                n.props = [];
                for (var s = 0; r > s; s++)
                    n.props.push(this.readString());
                return this.rememberTraits(n),
                n
            },
            this.readScriptObject = function () {
                var t = this.readUInt29();
                if (0 == (1 & t))
                    return this.getObject(t >> 1);
                var r = this.readTraits(t),
                i = {};
                if (e.CLASS_ALIAS in r && (i[e.CLASS_ALIAS] = r[e.CLASS_ALIAS]), this.rememberObject(i), 4 == (4 & t)) {
                    if ("flex.messaging.io.ArrayCollection" == i[e.CLASS_ALIAS] || "flex.messaging.io.ObjectProxy" == i[e.CLASS_ALIAS])
                        return this.readObject();
                    i[e.EXTERNALIZED_FIELD] = this.readObject()
                } else {
                    for (var n in r.props)
                        i[r.props[n]] = this.readObject();
                    if (8 == (8 & t))
                        for (; ; ) {
                            var s = this.readString();
                            if (null == s || 0 == s.length)
                                break;
                            i[s] = this.readObject()
                        }
                }
                return i
            },
            this.readArray = function () {
                var t = this.readUInt29();
                if (0 == (1 & t))
                    return this.getObject(t >> 1);
                for (var e = t >> 1, r = null, i = 0; ; ) {
                    var n = this.readString();
                    if (!n)
                        break;
                    r || (r = {}, this.rememberObject(r)),
                    r[n] = this.readObject()
                }
                if (r) {
                    for (i = 0; e > i; i++)
                        r[i] = this.readObject();
                    return r
                }
                var s = new Array(e);
                for (this.rememberObject(s), i = 0; e > i; i++)
                    s[i] = this.readObject();
                return s
            },
            this.readDouble = function () {
                var t = 255 & this.read(),
                e = 255 & this.read();
                if (255 === t) {
                    if (248 === e)
                        return Number.NaN;
                    if (240 === e)
                        return Number.NEGATIVE_INFINITY
                } else if (127 === t && 240 === e)
                    return Number.POSITIVE_INFINITY;
                var r = 255 & this.read(),
                i = 255 & this.read(),
                n = 255 & this.read(),
                s = 255 & this.read(),
                a = 255 & this.read(),
                o = 255 & this.read();
                if (!(t || e || r || i))
                    return 0;
                for (var h = (t << 4 & 2047 | e >> 4) - 1023, e = ((15 & e) << 16 | r << 8 | i).toString(2), r = e.length; 20 > r; r++)
                    e = "0" + e;
                for (s = ((127 & n) << 24 | s << 16 | a << 8 | o).toString(2), r = s.length; 31 > r; r++)
                    s = "0" + s;
                return n = parseInt(e + (n >> 7 ? "1" : "0") + s, 2),
                0 == n && -1023 == h ? 0 : (1 - (t >> 7 << 1)) * (1 + Math.pow(2, -52) * n) * Math.pow(2, h)
            },
            this.readDate = function () {
                var t = this.readUInt29();
                if (0 == (1 & t))
                    return this.getObject(t >> 1);
                var e = this.readDouble(),
                r = new Date(e);
                return this.rememberObject(r),
                r
            },
            this.readMap = function () {
                var t = this.readUInt29();
                if (0 == (1 & t))
                    return this.getObject(t >> 1);
                var e = t >> 1,
                r = null;
                if (e > 0) {
                    r = {},
                    this.rememberObject(r);
                    for (var i = this.readObject(); null != i; )
                        r[i] = this.readObject(), i = this.readObject()
                }
                return r
            },
            this.readByteArray = function () {
                var t = this.readUInt29();
                if (0 == (1 & t))
                    return this.getObject(t >> 1);
                var e = t >> 1,
                r = [];
                return this.readFully(r, 0, e),
                this.rememberObject(r),
                r
            },
            this.readObjectValue = function (t) {
                var r = null;
                switch (t) {
                case e.STRING_TYPE:
                    r = this.readString();
                    break;
                case e.OBJECT_TYPE:
                    try {
                        r = this.readScriptObject()
                    } catch (i) {
                        throw "Failed to deserialize:" + i
                    }
                    break;
                case e.ARRAY_TYPE:
                    r = this.readArray();
                    break;
                case e.FALSE_TYPE:
                    r = !1;
                    break;
                case e.TRUE_TYPE:
                    r = !0;
                    break;
                case e.INTEGER_TYPE:
                    r = this.readUInt29(),
                    r = r << 3 >> 3;
                    break;
                case e.DOUBLE_TYPE:
                    r = this.readDouble();
                    break;
                case e.UNDEFINED_TYPE:
                case e.NULL_TYPE:
                    break;
                case e.DATE_TYPE:
                    r = this.readDate();
                    break;
                case e.BYTEARRAY_TYPE:
                    r = this.readByteArray();
                    break;
                case e.AMF0_AMF3:
                    r = this.readObject();
                    break;
                default:
                    throw "Unknown AMF type: " + t
                }
                return r
            },
            this.readBoolean = function () {
                return 1 === this.read()
            },
            this.objects = [],
            this.traits = [],
            this.strings = [],
            this.data = t,
            this.pos = 0
        }
        return t
    }
    ();
    t.Reader = u,
    __reflect(u.prototype, "amf.Reader");
    var c = function () {
        function t() {
            this.writeMessage = function (t) {
                try {
                    this.writer.writeShort(t.version),
                    this.writer.writeShort(t.headers.length);
                    for (var e in t.headers)
                        this.writeHeader(t.headers[e]);
                    this.writer.writeShort(t.bodies.length);
                    for (var r in t.bodies)
                        this.writeBody(t.bodies[r])
                } catch (i) {
                    console.log(i)
                }
                return this.writer.data
            },
            this.writeObject = function (t) {
                this.writer.writeObject(t)
            },
            this.writeHeader = function (t) {
                this.writer.writeUTF(t.name),
                this.writer.writeBoolean(t.mustUnderstand),
                this.writer.writeInt(1),
                this.writer.reset(),
                this.writer.write(1),
                this.writer.writeBoolean(!0)
            },
            this.writeBody = function (t) {
                null == t.targetURI ? this.writer.writeUTF(e.NULL_STRING) : this.writer.writeUTF(t.targetURI),
                null == t.responseURI ? this.writer.writeUTF(e.NULL_STRING) : this.writer.writeUTF(t.responseURI),
                this.writer.writeInt(1),
                this.writer.reset(),
                this.writer.write(e.AMF0_AMF3),
                this.writeObject(t.data)
            },
            this.writer = new f
        }
        return t
    }
    ();
    t.Serializer = c,
    __reflect(c.prototype, "amf.Serializer");
    var d = function () {
        function t(t) {
            this.readMessage = function () {
                var t = new r;
                t.version = this.reader.readUnsignedShort();
                for (var e = this.reader.readUnsignedShort(), i = 0; e > i; i++)
                    t.headers.push(this.readHeader());
                var n = this.reader.readUnsignedShort();
                for (i = 0; n > i; i++)
                    t.bodies.push(this.readBody());
                return t
            },
            this.readHeader = function () {
                var t = new n;
                t.name = this.reader.readUTF(),
                t.mustUnderstand = this.reader.readBoolean(),
                this.reader.pos += 4,
                this.reader.reset();
                var e = this.reader.read();
                if (2 != e)
                    throw "Only string header data supported.";
                return t.data = this.reader.readUTF(),
                t
            },
            this.readBody = function () {
                var t = new i;
                return t.targetURI = this.reader.readUTF(),
                t.responseURI = this.reader.readUTF(),
                this.reader.pos += 4,
                this.reader.reset(),
                t.data = this.readObject(),
                t
            },
            this.readObject = function () {
                return this.reader.readObject()
            },
            this.reader = new u(t)
        }
        return t
    }
    ();
    t.Deserializer = d,
    __reflect(d.prototype, "amf.Deserializer")
}
(amf || (amf = {})), function () {
    "use strict";
    function t(t) {
        throw t
    }
    function e(t, e) {
        var r = t.split("."),
        i = T;
        !(r[0]in i) && i.execScript && i.execScript("var " + r[0]);
        for (var n; r.length && (n = r.shift()); )
            r.length || e === A ? i = i[n] ? i[n] : i[n] = {}
         : i[n] = e
    }
    function r(e, r) {
        this.index = "number" == typeof r ? r : 0,
        this.i = 0,
        this.buffer = e instanceof(U ? Uint8Array : Array) ? e : new(U ? Uint8Array : Array)(32768),
        2 * this.buffer.length <= this.index && t(Error("invalid index")),
        this.buffer.length <= this.index && this.f()
    }
    function i(t) {
        this.buffer = new(U ? Uint16Array : Array)(2 * t),
        this.length = 0
    }
    function n(t) {
        var e,
        r,
        i,
        n,
        s,
        a,
        o,
        h,
        f,
        u,
        c = t.length,
        d = 0,
        p = Number.POSITIVE_INFINITY;
        for (h = 0; c > h; ++h)
            t[h] > d && (d = t[h]), t[h] < p && (p = t[h]);
        for (e = 1 << d, r = new(U ? Uint32Array : Array)(e), i = 1, n = 0, s = 2; d >= i; ) {
            for (h = 0; c > h; ++h)
                if (t[h] === i) {
                    for (a = 0, o = n, f = 0; i > f; ++f)
                        a = a << 1 | 1 & o, o >>= 1;
                    for (u = i << 16 | h, f = a; e > f; f += s)
                        r[f] = u;
                    ++n
                }
            ++i,
            n <<= 1,
            s <<= 1
        }
        return [r, d, p]
    }
    function s(t, e) {
        this.h = O,
        this.w = 0,
        this.input = U && t instanceof Array ? new Uint8Array(t) : t,
        this.b = 0,
        e && (e.lazy && (this.w = e.lazy), "number" == typeof e.compressionType && (this.h = e.compressionType), e.outputBuffer && (this.a = U && e.outputBuffer instanceof Array ? new Uint8Array(e.outputBuffer) : e.outputBuffer), "number" == typeof e.outputIndex && (this.b = e.outputIndex)),
        this.a || (this.a = new(U ? Uint8Array : Array)(32768))
    }
    function a(t, e) {
        this.length = t,
        this.H = e
    }
    function o(e, r) {
        function i(e, r) {
            var i,
            n = e.H,
            s = [],
            a = 0;
            i = L[e.length],
            s[a++] = 65535 & i,
            s[a++] = i >> 16 & 255,
            s[a++] = i >> 24;
            var o;
            switch (_) {
            case 1 === n:
                o = [0, n - 1, 0];
                break;
            case 2 === n:
                o = [1, n - 2, 0];
                break;
            case 3 === n:
                o = [2, n - 3, 0];
                break;
            case 4 === n:
                o = [3, n - 4, 0];
                break;
            case 6 >= n:
                o = [4, n - 5, 1];
                break;
            case 8 >= n:
                o = [5, n - 7, 1];
                break;
            case 12 >= n:
                o = [6, n - 9, 2];
                break;
            case 16 >= n:
                o = [7, n - 13, 2];
                break;
            case 24 >= n:
                o = [8, n - 17, 3];
                break;
            case 32 >= n:
                o = [9, n - 25, 3];
                break;
            case 48 >= n:
                o = [10, n - 33, 4];
                break;
            case 64 >= n:
                o = [11, n - 49, 4];
                break;
            case 96 >= n:
                o = [12, n - 65, 5];
                break;
            case 128 >= n:
                o = [13, n - 97, 5];
                break;
            case 192 >= n:
                o = [14, n - 129, 6];
                break;
            case 256 >= n:
                o = [15, n - 193, 6];
                break;
            case 384 >= n:
                o = [16, n - 257, 7];
                break;
            case 512 >= n:
                o = [17, n - 385, 7];
                break;
            case 768 >= n:
                o = [18, n - 513, 8];
                break;
            case 1024 >= n:
                o = [19, n - 769, 8];
                break;
            case 1536 >= n:
                o = [20, n - 1025, 9];
                break;
            case 2048 >= n:
                o = [21, n - 1537, 9];
                break;
            case 3072 >= n:
                o = [22, n - 2049, 10];
                break;
            case 4096 >= n:
                o = [23, n - 3073, 10];
                break;
            case 6144 >= n:
                o = [24, n - 4097, 11];
                break;
            case 8192 >= n:
                o = [25, n - 6145, 11];
                break;
            case 12288 >= n:
                o = [26, n - 8193, 12];
                break;
            case 16384 >= n:
                o = [27, n - 12289, 12];
                break;
            case 24576 >= n:
                o = [28, n - 16385, 13];
                break;
            case 32768 >= n:
                o = [29, n - 24577, 13];
                break;
            default:
                t("invalid distance")
            }
            i = o,
            s[a++] = i[0],
            s[a++] = i[1],
            s[a++] = i[2];
            var h,
            f;
            for (h = 0, f = s.length; f > h; ++h)
                y[b++] = s[h];
            w[s[0]]++,
            v[s[3]]++,
            g = e.length + r - 1,
            d = null
        }
        var n,
        s,
        a,
        o,
        f,
        u,
        c,
        d,
        p,
        l = {},
        y = U ? new Uint16Array(2 * r.length) : [],
        b = 0,
        g = 0,
        w = new(U ? Uint32Array : Array)(286),
        v = new(U ? Uint32Array : Array)(30),
        T = e.w;
        if (!U) {
            for (a = 0; 285 >= a; )
                w[a++] = 0;
            for (a = 0; 29 >= a; )
                v[a++] = 0
        }
        for (w[256] = 1, n = 0, s = r.length; s > n; ++n) {
            for (a = f = 0, o = 3; o > a && n + a !== s; ++a)
                f = f << 8 | r[n + a];
            if (l[f] === A && (l[f] = []), u = l[f], !(0 < g--)) {
                for (; 0 < u.length && 32768 < n - u[0]; )
                    u.shift();
                if (n + 3 >= s) {
                    for (d && i(d, -1), a = 0, o = s - n; o > a; ++a)
                        p = r[n + a], y[b++] = p, ++w[p];
                    break
                }
                0 < u.length ? (c = h(r, n, u), d ? d.length < c.length ? (p = r[n - 1], y[b++] = p, ++w[p], i(c, 0)) : i(d, -1) : c.length < T ? d = c : i(c, 0)) : d ? i(d, -1) : (p = r[n], y[b++] = p, ++w[p])
            }
            u.push(n)
        }
        return y[b++] = 256,
        w[256]++,
        e.M = w,
        e.L = v,
        U ? y.subarray(0, b) : y
    }
    function h(t, e, r) {
        var i,
        n,
        s,
        o,
        h,
        f,
        u = 0,
        c = t.length;
        o = 0,
        f = r.length;
        t: for (; f > o; o++) {
            if (i = r[f - o - 1], s = 3, u > 3) {
                for (h = u; h > 3; h--)
                    if (t[i + h - 1] !== t[e + h - 1])
                        continue t;
                s = u
            }
            for (; 258 > s && c > e + s && t[i + s] === t[e + s]; )
                ++s;
            if (s > u && (n = i, u = s), 258 === s)
                break
        }
        return new a(u, e - n)
    }
    function f(t, e) {
        var r,
        n,
        s,
        a,
        o,
        h = t.length,
        f = new i(572),
        c = new(U ? Uint8Array : Array)(h);
        if (!U)
            for (a = 0; h > a; a++)
                c[a] = 0;
        for (a = 0; h > a; ++a)
            0 < t[a] && f.push(a, t[a]);
        if (r = Array(f.length / 2), n = new(U ? Uint32Array : Array)(f.length / 2), 1 === r.length)
            return c[f.pop().index] = 1, c;
        for (a = 0, o = f.length / 2; o > a; ++a)
            r[a] = f.pop(), n[a] = r[a].value;
        for (s = u(n, n.length, e), a = 0, o = r.length; o > a; ++a)
            c[r[a].index] = s[a];
        return c
    }
    function u(t, e, r) {
        function i(t) {
            var r = p[t][l[t]];
            r === e ? (i(t + 1), i(t + 1)) : --c[r],
            ++l[t]
        }
        var n,
        s,
        a,
        o,
        h,
        f = new(U ? Uint16Array : Array)(r),
        u = new(U ? Uint8Array : Array)(r),
        c = new(U ? Uint8Array : Array)(e),
        d = Array(r),
        p = Array(r),
        l = Array(r),
        y = (1 << r) - e,
        b = 1 << r - 1;
        for (f[r - 1] = e, s = 0; r > s; ++s)
            b > y ? u[s] = 0 : (u[s] = 1, y -= b), y <<= 1, f[r - 2 - s] = (f[r - 1 - s] / 2 | 0) + e;
        for (f[0] = u[0], d[0] = Array(f[0]), p[0] = Array(f[0]), s = 1; r > s; ++s)
            f[s] > 2 * f[s - 1] + u[s] && (f[s] = 2 * f[s - 1] + u[s]), d[s] = Array(f[s]), p[s] = Array(f[s]);
        for (n = 0; e > n; ++n)
            c[n] = r;
        for (a = 0; a < f[r - 1]; ++a)
            d[r - 1][a] = t[a], p[r - 1][a] = a;
        for (n = 0; r > n; ++n)
            l[n] = 0;
        for (1 === u[r - 1] && (--c[0], ++l[r - 1]), s = r - 2; s >= 0; --s) {
            for (o = n = 0, h = l[s + 1], a = 0; a < f[s]; a++)
                o = d[s + 1][h] + d[s + 1][h + 1], o > t[n] ? (d[s][a] = o, p[s][a] = e, h += 2) : (d[s][a] = t[n], p[s][a] = n, ++n);
            l[s] = 0,
            1 === u[s] && i(s)
        }
        return c
    }
    function c(t) {
        var e,
        r,
        i,
        n,
        s = new(U ? Uint16Array : Array)(t.length),
        a = [],
        o = [],
        h = 0;
        for (e = 0, r = t.length; r > e; e++)
            a[t[e]] = (0 | a[t[e]]) + 1;
        for (e = 1, r = 16; r >= e; e++)
            o[e] = h, h += 0 | a[e], h <<= 1;
        for (e = 0, r = t.length; r > e; e++)
            for (h = o[t[e]], o[t[e]] += 1, i = s[e] = 0, n = t[e]; n > i; i++)
                s[e] = s[e] << 1 | 1 & h, h >>>= 1;
        return s
    }
    function d(e, r) {
        switch (this.l = [], this.m = 32768, this.e = this.g = this.c = this.q = 0, this.input = U ? new Uint8Array(e) : e, this.s = !1, this.n = D, this.C = !1, (r || !(r = {})) && (r.index && (this.c = r.index), r.bufferSize && (this.m = r.bufferSize), r.bufferType && (this.n = r.bufferType), r.resize && (this.C = r.resize)), this.n) {
        case R:
            this.b = 32768,
            this.a = new(U ? Uint8Array : Array)(32768 + this.m + 258);
            break;
        case D:
            this.b = 0,
            this.a = new(U ? Uint8Array : Array)(this.m),
            this.f = this.K,
            this.t = this.I,
            this.o = this.J;
            break;
        default:
            t(Error("invalid inflate mode"))
        }
    }
    function p(e, r) {
        for (var i, n = e.g, s = e.e, a = e.input, o = e.c, h = a.length; r > s; )
            o >= h && t(Error("input buffer is broken")), n |= a[o++] << s, s += 8;
        return i = n & (1 << r) - 1,
        e.g = n >>> r,
        e.e = s - r,
        e.c = o,
        i
    }
    function l(t, e) {
        for (var r, i, n = t.g, s = t.e, a = t.input, o = t.c, h = a.length, f = e[0], u = e[1]; u > s && !(o >= h); )
            n |= a[o++] << s, s += 8;
        return r = f[n & (1 << u) - 1],
        i = r >>> 16,
        t.g = n >> i,
        t.e = s - i,
        t.c = o,
        65535 & r
    }
    function y(t) {
        function e(t, e, r) {
            var i,
            n,
            s,
            a = this.z;
            for (s = 0; t > s; )
                switch (i = l(this, e)) {
                case 16:
                    for (n = 3 + p(this, 2); n--; )
                        r[s++] = a;
                    break;
                case 17:
                    for (n = 3 + p(this, 3); n--; )
                        r[s++] = 0;
                    a = 0;
                    break;
                case 18:
                    for (n = 11 + p(this, 7); n--; )
                        r[s++] = 0;
                    a = 0;
                    break;
                default:
                    a = r[s++] = i
                }
            return this.z = a,
            r
        }
        var r,
        i,
        s,
        a,
        o = p(t, 5) + 257,
        h = p(t, 5) + 1,
        f = p(t, 4) + 4,
        u = new(U ? Uint8Array : Array)(z.length);
        for (a = 0; f > a; ++a)
            u[z[a]] = p(t, 3);
        if (!U)
            for (a = f, f = u.length; f > a; ++a)
                u[z[a]] = 0;
        r = n(u),
        i = new(U ? Uint8Array : Array)(o),
        s = new(U ? Uint8Array : Array)(h),
        t.z = 0,
        t.o(n(e.call(t, o, r, i)), n(e.call(t, h, r, s)))
    }
    function b(t) {
        if ("string" == typeof t) {
            var e,
            r,
            i = t.split("");
            for (e = 0, r = i.length; r > e; e++)
                i[e] = (255 & i[e].charCodeAt(0)) >>> 0;
            t = i
        }
        for (var n, s = 1, a = 0, o = t.length, h = 0; o > 0; ) {
            n = o > 1024 ? 1024 : o,
            o -= n;
            do
                s += t[h++], a += s;
            while (--n);
            s %= 65521,
            a %= 65521
        }
        return (a << 16 | s) >>> 0
    }
    function g(e, r) {
        var i,
        n;
        switch (this.input = e, this.c = 0, (r || !(r = {})) && (r.index && (this.c = r.index), r.verify && (this.N = r.verify)), i = e[this.c++], n = e[this.c++], 15 & i) {
        case ie:
            this.method = ie;
            break;
        default:
            t(Error("unsupported compression method"))
        }
        0 !== ((i << 8) + n) % 31 && t(Error("invalid fcheck flag:" + ((i << 8) + n) % 31)),
        32 & n && t(Error("fdict flag is not supported")),
        this.B = new d(e, {
                index: this.c,
                bufferSize: r.bufferSize,
                bufferType: r.bufferType,
                resize: r.resize
            })
    }
    function w(t, e) {
        this.input = t,
        this.a = new(U ? Uint8Array : Array)(32768),
        this.h = ne.k;
        var r,
        i = {};
        !e && (e = {}) || "number" != typeof e.compressionType || (this.h = e.compressionType);
        for (r in e)
            i[r] = e[r];
        i.outputBuffer = this.a,
        this.A = new s(this.input, i)
    }
    function v(t, r) {
        var i,
        n,
        s,
        a;
        if (Object.keys)
            i = Object.keys(r);
        else
            for (n in i = [], s = 0, r)
                i[s++] = n;
        for (s = 0, a = i.length; a > s; ++s)
            n = i[s], e(t + "." + n, r[n])
    }
    var A = void 0,
    _ = !0,
    T = this,
    U = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Uint32Array && "undefined" != typeof DataView;
    r.prototype.f = function () {
        var t,
        e = this.buffer,
        r = e.length,
        i = new(U ? Uint8Array : Array)(r << 1);
        if (U)
            i.set(e);
        else
            for (t = 0; r > t; ++t)
                i[t] = e[t];
        return this.buffer = i
    },
    r.prototype.d = function (t, e, r) {
        var i,
        n = this.buffer,
        s = this.index,
        a = this.i,
        o = n[s];
        if (r && e > 1 && (t = e > 8 ? (B[255 & t] << 24 | B[t >>> 8 & 255] << 16 | B[t >>> 16 & 255] << 8 | B[t >>> 24 & 255]) >> 32 - e : B[t] >> 8 - e), 8 > e + a)
            o = o << e | t, a += e;
        else
            for (i = 0; e > i; ++i)
                o = o << 1 | t >> e - i - 1 & 1, 8 === ++a && (a = 0, n[s++] = B[o], o = 0, s === n.length && (n = this.f()));
        n[s] = o,
        this.buffer = n,
        this.i = a,
        this.index = s
    },
    r.prototype.finish = function () {
        var t,
        e = this.buffer,
        r = this.index;
        return 0 < this.i && (e[r] <<= 8 - this.i, e[r] = B[e[r]], r++),
        U ? t = e.subarray(0, r) : (e.length = r, t = e),
        t
    };
    var m,
    I = new(U ? Uint8Array : Array)(256);
    for (m = 0; 256 > m; ++m) {
        for (var E = m, S = E, k = 7, E = E >>> 1; E; E >>>= 1)
            S <<= 1, S |= 1 & E, --k;
        I[m] = (S << k & 255) >>> 0
    }
    var B = I;
    i.prototype.getParent = function (t) {
        return 2 * ((t - 2) / 4 | 0)
    },
    i.prototype.push = function (t, e) {
        var r,
        i,
        n,
        s = this.buffer;
        for (r = this.length, s[this.length++] = e, s[this.length++] = t; r > 0 && (i = this.getParent(r), s[r] > s[i]); )
            n = s[r], s[r] = s[i], s[i] = n, n = s[r + 1], s[r + 1] = s[i + 1], s[i + 1] = n, r = i;
        return this.length
    },
    i.prototype.pop = function () {
        var t,
        e,
        r,
        i,
        n,
        s = this.buffer;
        for (e = s[0], t = s[1], this.length -= 2, s[0] = s[this.length], s[1] = s[this.length + 1], n = 0; (i = 2 * n + 2, !(i >= this.length)) && (i + 2 < this.length && s[i + 2] > s[i] && (i += 2), s[i] > s[n]); )
            r = s[n], s[n] = s[i], s[i] = r, r = s[n + 1], s[n + 1] = s[i + 1], s[i + 1] = r, n = i;
        return {
            index: t,
            value: e,
            length: this.length
        }
    };
    var j,
    O = 2,
    F = {
        NONE: 0,
        r: 1,
        k: O,
        O: 3
    },
    M = [];
    for (j = 0; 288 > j; j++)
        switch (_) {
        case 143 >= j:
            M.push([j + 48, 8]);
            break;
        case 255 >= j:
            M.push([j - 144 + 400, 9]);
            break;
        case 279 >= j:
            M.push([j - 256 + 0, 7]);
            break;
        case 287 >= j:
            M.push([j - 280 + 192, 8]);
            break;
        default:
            t("invalid literal: " + j)
        }
    s.prototype.j = function () {
        var e,
        i,
        n,
        s,
        a = this.input;
        switch (this.h) {
        case 0:
            for (n = 0, s = a.length; s > n; ) {
                i = U ? a.subarray(n, n + 65535) : a.slice(n, n + 65535),
                n += i.length;
                var h = i,
                u = n === s,
                d = A,
                p = A,
                l = A,
                y = A,
                b = A,
                g = this.a,
                w = this.b;
                if (U) {
                    for (g = new Uint8Array(this.a.buffer); g.length <= w + h.length + 5; )
                        g = new Uint8Array(g.length << 1);
                    g.set(this.a)
                }
                if (d = u ? 1 : 0, g[w++] = 0 | d, p = h.length, l = ~p + 65536 & 65535, g[w++] = 255 & p, g[w++] = p >>> 8 & 255, g[w++] = 255 & l, g[w++] = l >>> 8 & 255, U)
                    g.set(h, w), w += h.length, g = g.subarray(0, w);
                else {
                    for (y = 0, b = h.length; b > y; ++y)
                        g[w++] = h[y];
                    g.length = w
                }
                this.b = w,
                this.a = g
            }
            break;
        case 1:
            var v = new r(U ? new Uint8Array(this.a.buffer) : this.a, this.b);
            v.d(1, 1, _),
            v.d(1, 2, _);
            var T,
            m,
            I,
            E = o(this, a);
            for (T = 0, m = E.length; m > T; T++)
                if (I = E[T], r.prototype.d.apply(v, M[I]), I > 256)
                    v.d(E[++T], E[++T], _), v.d(E[++T], 5), v.d(E[++T], E[++T], _);
                else if (256 === I)
                    break;
            this.a = v.finish(),
            this.b = this.a.length;
            break;
        case O:
            var S,
            k,
            B,
            j,
            F,
            N,
            L,
            R,
            D,
            P,
            C,
            Y,
            x,
            z,
            G,
            V = new r(U ? new Uint8Array(this.a.buffer) : this.a, this.b),
            $ = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
            Z = Array(19);
            for (S = O, V.d(1, 1, _), V.d(S, 2, _), k = o(this, a), N = f(this.M, 15), L = c(N), R = f(this.L, 7), D = c(R), B = 286; B > 257 && 0 === N[B - 1]; B--);
            for (j = 30; j > 1 && 0 === R[j - 1]; j--);
            var W,
            X,
            H,
            J,
            q,
            K,
            Q = B,
            te = j,
            ee = new(U ? Uint32Array : Array)(Q + te),
            re = new(U ? Uint32Array : Array)(316),
            ie = new(U ? Uint8Array : Array)(19);
            for (W = X = 0; Q > W; W++)
                ee[X++] = N[W];
            for (W = 0; te > W; W++)
                ee[X++] = R[W];
            if (!U)
                for (W = 0, J = ie.length; J > W; ++W)
                    ie[W] = 0;
            for (W = q = 0, J = ee.length; J > W; W += X) {
                for (X = 1; J > W + X && ee[W + X] === ee[W]; ++X);
                if (H = X, 0 === ee[W])
                    if (3 > H)
                        for (; 0 < H--; )
                            re[q++] = 0, ie[0]++;
                    else
                        for (; H > 0; )
                            K = 138 > H ? H : 138, K > H - 3 && H > K && (K = H - 3), 10 >= K ? (re[q++] = 17, re[q++] = K - 3, ie[17]++) : (re[q++] = 18, re[q++] = K - 11, ie[18]++), H -= K;
                else if (re[q++] = ee[W], ie[ee[W]]++, H--, 3 > H)
                    for (; 0 < H--; )
                        re[q++] = ee[W], ie[ee[W]]++;
                else
                    for (; H > 0; )
                        K = 6 > H ? H : 6, K > H - 3 && H > K && (K = H - 3), re[q++] = 16, re[q++] = K - 3, ie[16]++, H -= K
            }
            for (e = U ? re.subarray(0, q) : re.slice(0, q), P = f(ie, 7), z = 0; 19 > z; z++)
                Z[z] = P[$[z]];
            for (F = 19; F > 4 && 0 === Z[F - 1]; F--);
            for (C = c(P), V.d(B - 257, 5, _), V.d(j - 1, 5, _), V.d(F - 4, 4, _), z = 0; F > z; z++)
                V.d(Z[z], 3, _);
            for (z = 0, G = e.length; G > z; z++)
                if (Y = e[z], V.d(C[Y], P[Y], _), Y >= 16) {
                    switch (z++, Y) {
                    case 16:
                        x = 2;
                        break;
                    case 17:
                        x = 3;
                        break;
                    case 18:
                        x = 7;
                        break;
                    default:
                        t("invalid code: " + Y)
                    }
                    V.d(e[z], x, _)
                }
            var ne,
            se,
            ae,
            oe,
            he,
            fe,
            ue,
            ce,
            de = [L, N],
            pe = [D, R];
            for (he = de[0], fe = de[1], ue = pe[0], ce = pe[1], ne = 0, se = k.length; se > ne; ++ne)
                if (ae = k[ne], V.d(he[ae], fe[ae], _), ae > 256)
                    V.d(k[++ne], k[++ne], _), oe = k[++ne], V.d(ue[oe], ce[oe], _), V.d(k[++ne], k[++ne], _);
                else if (256 === ae)
                    break;
            this.a = V.finish(),
            this.b = this.a.length;
            break;
        default:
            t("invalid compression type")
        }
        return this.a
    };
    var N = function () {
        function e(e) {
            switch (_) {
            case 3 === e:
                return [257, e - 3, 0];
            case 4 === e:
                return [258, e - 4, 0];
            case 5 === e:
                return [259, e - 5, 0];
            case 6 === e:
                return [260, e - 6, 0];
            case 7 === e:
                return [261, e - 7, 0];
            case 8 === e:
                return [262, e - 8, 0];
            case 9 === e:
                return [263, e - 9, 0];
            case 10 === e:
                return [264, e - 10, 0];
            case 12 >= e:
                return [265, e - 11, 1];
            case 14 >= e:
                return [266, e - 13, 1];
            case 16 >= e:
                return [267, e - 15, 1];
            case 18 >= e:
                return [268, e - 17, 1];
            case 22 >= e:
                return [269, e - 19, 2];
            case 26 >= e:
                return [270, e - 23, 2];
            case 30 >= e:
                return [271, e - 27, 2];
            case 34 >= e:
                return [272, e - 31, 2];
            case 42 >= e:
                return [273, e - 35, 3];
            case 50 >= e:
                return [274, e - 43, 3];
            case 58 >= e:
                return [275, e - 51, 3];
            case 66 >= e:
                return [276, e - 59, 3];
            case 82 >= e:
                return [277, e - 67, 4];
            case 98 >= e:
                return [278, e - 83, 4];
            case 114 >= e:
                return [279, e - 99, 4];
            case 130 >= e:
                return [280, e - 115, 4];
            case 162 >= e:
                return [281, e - 131, 5];
            case 194 >= e:
                return [282, e - 163, 5];
            case 226 >= e:
                return [283, e - 195, 5];
            case 257 >= e:
                return [284, e - 227, 5];
            case 258 === e:
                return [285, e - 258, 0];
            default:
                t("invalid length: " + e)
            }
        }
        var r,
        i,
        n = [];
        for (r = 3; 258 >= r; r++)
            i = e(r), n[r] = i[2] << 24 | i[1] << 16 | i[0];
        return n
    }
    (),
    L = U ? new Uint32Array(N) : N,
    R = 0,
    D = 1,
    P = {
        F: R,
        D: D
    };
    d.prototype.p = function () {
        for (; !this.s; ) {
            var e = p(this, 3);
            switch (1 & e && (this.s = _), e >>>= 1) {
            case 0:
                var r = this.input,
                i = this.c,
                n = this.a,
                s = this.b,
                a = r.length,
                o = A,
                h = A,
                f = n.length,
                u = A;
                switch (this.e = this.g = 0, i + 1 >= a && t(Error("invalid uncompressed block header: LEN")), o = r[i++] | r[i++] << 8, i + 1 >= a && t(Error("invalid uncompressed block header: NLEN")), h = r[i++] | r[i++] << 8, o === ~h && t(Error("invalid uncompressed block header: length verify")), i + o > r.length && t(Error("input buffer is broken")), this.n) {
                case R:
                    for (; s + o > n.length; ) {
                        if (u = f - s, o -= u, U)
                            n.set(r.subarray(i, i + u), s), s += u, i += u;
                        else
                            for (; u--; )
                                n[s++] = r[i++];
                        this.b = s,
                        n = this.f(),
                        s = this.b
                    }
                    break;
                case D:
                    for (; s + o > n.length; )
                        n = this.f({
                                v: 2
                            });
                    break;
                default:
                    t(Error("invalid inflate mode"))
                }
                if (U)
                    n.set(r.subarray(i, i + o), s), s += o, i += o;
                else
                    for (; o--; )
                        n[s++] = r[i++];
                this.c = i,
                this.b = s,
                this.a = n;
                break;
            case 1:
                this.o(te, re);
                break;
            case 2:
                y(this);
                break;
            default:
                t(Error("unknown BTYPE: " + e))
            }
        }
        return this.t()
    };
    var C,
    Y,
    x = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
    z = U ? new Uint16Array(x) : x,
    G = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 258, 258],
    V = U ? new Uint16Array(G) : G,
    $ = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0],
    Z = U ? new Uint8Array($) : $,
    W = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577],
    X = U ? new Uint16Array(W) : W,
    H = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],
    J = U ? new Uint8Array(H) : H,
    q = new(U ? Uint8Array : Array)(288);
    for (C = 0, Y = q.length; Y > C; ++C)
        q[C] = 143 >= C ? 8 : 255 >= C ? 9 : 279 >= C ? 7 : 8;
    var K,
    Q,
    te = n(q),
    ee = new(U ? Uint8Array : Array)(30);
    for (K = 0, Q = ee.length; Q > K; ++K)
        ee[K] = 5;
    var re = n(ee);
    d.prototype.o = function (t, e) {
        var r = this.a,
        i = this.b;
        this.u = t;
        for (var n, s, a, o, h = r.length - 258; 256 !== (n = l(this, t)); )
            if (256 > n)
                i >= h && (this.b = i, r = this.f(), i = this.b), r[i++] = n;
            else
                for (s = n - 257, o = V[s], 0 < Z[s] && (o += p(this, Z[s])), n = l(this, e), a = X[n], 0 < J[n] && (a += p(this, J[n])), i >= h && (this.b = i, r = this.f(), i = this.b); o--; )
                    r[i] = r[i++ - a];
        for (; 8 <= this.e; )
            this.e -= 8, this.c--;
        this.b = i
    },
    d.prototype.J = function (t, e) {
        var r = this.a,
        i = this.b;
        this.u = t;
        for (var n, s, a, o, h = r.length; 256 !== (n = l(this, t)); )
            if (256 > n)
                i >= h && (r = this.f(), h = r.length), r[i++] = n;
            else
                for (s = n - 257, o = V[s], 0 < Z[s] && (o += p(this, Z[s])), n = l(this, e), a = X[n], 0 < J[n] && (a += p(this, J[n])), i + o > h && (r = this.f(), h = r.length); o--; )
                    r[i] = r[i++ - a];
        for (; 8 <= this.e; )
            this.e -= 8, this.c--;
        this.b = i
    },
    d.prototype.f = function () {
        var t,
        e,
        r = new(U ? Uint8Array : Array)(this.b - 32768),
        i = this.b - 32768,
        n = this.a;
        if (U)
            r.set(n.subarray(32768, r.length));
        else
            for (t = 0, e = r.length; e > t; ++t)
                r[t] = n[t + 32768];
        if (this.l.push(r), this.q += r.length, U)
            n.set(n.subarray(i, i + 32768));
        else
            for (t = 0; 32768 > t; ++t)
                n[t] = n[i + t];
        return this.b = 32768,
        n
    },
    d.prototype.K = function (t) {
        var e,
        r,
        i,
        n,
        s = this.input.length / this.c + 1 | 0,
        a = this.input,
        o = this.a;
        return t && ("number" == typeof t.v && (s = t.v), "number" == typeof t.G && (s += t.G)),
        2 > s ? (r = (a.length - this.c) / this.u[2], n = 258 * (r / 2) | 0, i = n < o.length ? o.length + n : o.length << 1) : i = o.length * s,
        U ? (e = new Uint8Array(i), e.set(o)) : e = o,
        this.a = e
    },
    d.prototype.t = function () {
        var t,
        e,
        r,
        i,
        n,
        s = 0,
        a = this.a,
        o = this.l,
        h = new(U ? Uint8Array : Array)(this.q + (this.b - 32768));
        if (0 === o.length)
            return U ? this.a.subarray(32768, this.b) : this.a.slice(32768, this.b);
        for (e = 0, r = o.length; r > e; ++e)
            for (t = o[e], i = 0, n = t.length; n > i; ++i)
                h[s++] = t[i];
        for (e = 32768, r = this.b; r > e; ++e)
            h[s++] = a[e];
        return this.l = [],
        this.buffer = h
    },
    d.prototype.I = function () {
        var t,
        e = this.b;
        return U ? this.C ? (t = new Uint8Array(e), t.set(this.a.subarray(0, e))) : t = this.a.subarray(0, e) : (this.a.length > e && (this.a.length = e), t = this.a),
        this.buffer = t
    },
    g.prototype.p = function () {
        var e,
        r,
        i = this.input;
        return e = this.B.p(),
        this.c = this.B.c,
        this.N && (r = (i[this.c++] << 24 | i[this.c++] << 16 | i[this.c++] << 8 | i[this.c++]) >>> 0, r !== b(e) && t(Error("invalid adler-32 checksum"))),
        e
    };
    var ie = 8,
    ne = F;
    w.prototype.j = function () {
        var e,
        r,
        i,
        n,
        s,
        a,
        o,
        h = 0;
        switch (o = this.a, e = ie) {
        case ie:
            r = Math.LOG2E * Math.log(32768) - 8;
            break;
        default:
            t(Error("invalid compression method"))
        }
        switch (i = r << 4 | e, o[h++] = i, e) {
        case ie:
            switch (this.h) {
            case ne.NONE:
                s = 0;
                break;
            case ne.r:
                s = 1;
                break;
            case ne.k:
                s = 2;
                break;
            default:
                t(Error("unsupported compression type"))
            }
            break;
        default:
            t(Error("invalid compression method"))
        }
        return n = s << 6 | 0,
        o[h++] = n | 31 - (256 * i + n) % 31,
        a = b(this.input),
        this.A.b = h,
        o = this.A.j(),
        h = o.length,
        U && (o = new Uint8Array(o.buffer), o.length <= h + 4 && (this.a = new Uint8Array(o.length + 4), this.a.set(o), o = this.a), o = o.subarray(0, h + 4)),
        o[h++] = a >> 24 & 255,
        o[h++] = a >> 16 & 255,
        o[h++] = a >> 8 & 255,
        o[h++] = 255 & a,
        o
    },
    e("Zlib.Inflate", g),
    e("Zlib.Inflate.prototype.decompress", g.prototype.p),
    v("Zlib.Inflate.BufferType", {
        ADAPTIVE: P.D,
        BLOCK: P.F
    }),
    e("Zlib.Deflate", w),
    e("Zlib.Deflate.compress", function (t, e) {
        return new w(t, e).j()
    }),
    e("Zlib.Deflate.prototype.compress", w.prototype.j),
    v("Zlib.Deflate.CompressionType", {
        NONE: ne.NONE,
        FIXED: ne.r,
        DYNAMIC: ne.k
    })
}
.call(this);
var decoder;
!function (t) {
    var e = function () {
        function t() {}
        return t.LITTLE_ENDIAN = "littleEndian",
        t.BIG_ENDIAN = "bigEndian",
        t
    }
    ();
    t.Endian = e,
    __reflect(e.prototype, "decoder.Endian");
    var r = function () {
        function t(t, r) {
            void 0 === r && (r = 0),
            this.bufferExtSize = 0,
            this.EOF_byte = -1,
            this.EOF_code_point = -1,
            0 > r && (r = 0),
            this.bufferExtSize = r;
            var i,
            n = 0;
            if (t) {
                var s = void 0;
                if (t instanceof Uint8Array ? (s = t, n = t.length) : (n = t.byteLength, s = new Uint8Array(t)), 0 == r)
                    i = new Uint8Array(n);
                else {
                    var a = (n / r | 0) + 1;
                    i = new Uint8Array(a * r)
                }
                i.set(s)
            } else
                i = new Uint8Array(r);
            this.write_position = n,
            this._position = 0,
            this._bytes = i,
            this.data = new DataView(i.buffer),
            this.endian = e.BIG_ENDIAN
        }
        return Object.defineProperty(t.prototype, "endian", {
            get: function () {
                return 0 == this.$endian ? e.LITTLE_ENDIAN : e.BIG_ENDIAN
            },
            set: function (t) {
                this.$endian = t == e.LITTLE_ENDIAN ? 0 : 1
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.setArrayBuffer = function (t) {},
        Object.defineProperty(t.prototype, "readAvailable", {
            get: function () {
                return this.write_position - this._position
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "buffer", {
            get: function () {
                return this.data.buffer.slice(0, this.write_position)
            },
            set: function (t) {
                var e,
                r = t.byteLength,
                i = new Uint8Array(t),
                n = this.bufferExtSize;
                if (0 == n)
                    e = new Uint8Array(r);
                else {
                    var s = (r / n | 0) + 1;
                    e = new Uint8Array(s * n)
                }
                e.set(i),
                this.write_position = r,
                this._bytes = e,
                this.data = new DataView(e.buffer)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "rawBuffer", {
            get: function () {
                return this.data.buffer
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "bytes", {
            get: function () {
                return this._bytes
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "dataView", {
            get: function () {
                return this.data
            },
            set: function (t) {
                this.buffer = t.buffer
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "bufferOffset", {
            get: function () {
                return this.data.byteOffset
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "position", {
            get: function () {
                return this._position
            },
            set: function (t) {
                this._position = t,
                t > this.write_position && (this.write_position = t)
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "length", {
            get: function () {
                return this.write_position
            },
            set: function (t) {
                this.write_position = t,
                this.data.byteLength > t && (this._position = t),
                this._validateBuffer(t)
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype._validateBuffer = function (t) {
            if (this.data.byteLength < t) {
                var e = this.bufferExtSize,
                r = void 0;
                if (0 == e)
                    r = new Uint8Array(t);
                else {
                    var i = ((t / e >> 0) + 1) * e;
                    r = new Uint8Array(i)
                }
                r.set(this._bytes),
                this._bytes = r,
                this.data = new DataView(r.buffer)
            }
        },
        Object.defineProperty(t.prototype, "bytesAvailable", {
            get: function () {
                return this.data.byteLength - this._position
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.clear = function () {
            var t = new ArrayBuffer(this.bufferExtSize);
            this.data = new DataView(t),
            this._bytes = new Uint8Array(t),
            this._position = 0,
            this.write_position = 0
        },
        t.prototype.readBoolean = function () {
            return this.validate(1) ? !!this._bytes[this.position++] : void 0
        },
        t.prototype.readByte = function () {
            return this.validate(1) ? this.data.getInt8(this.position++) : void 0
        },
        t.prototype.readBytes = function (t, e, r) {
            if (void 0 === e && (e = 0), void 0 === r && (r = 0), t) {
                var i = this._position,
                n = this.write_position - i;
                if (0 > n)
                    return void console.error(1025);
                if (0 == r)
                    r = n;
                else if (r > n){
                    return void console.error(1025);
                }

                t.validateBuffer(e + r),
                t._bytes.set(this._bytes.subarray(i, i + r), e),
                this.position += r
            }
        },
        t.prototype.readDouble = function () {
            if (this.validate(8)) {
                var t = this.data.getFloat64(this._position, 0 == this.$endian);
                return this.position += 8,
                t
            }
        },
        t.prototype.readFloat = function () {
            if (this.validate(4)) {
                var t = this.data.getFloat32(this._position, 0 == this.$endian);
                return this.position += 4,
                t
            }
        },
        t.prototype.readInt = function () {
            if (this.validate(4)) {
                var t = this.data.getInt32(this._position, 0 == this.$endian);
                return this.position += 4,
                t
            }
        },
        t.prototype.readShort = function () {
            if (this.validate(2)) {
                var t = this.data.getInt16(this._position, 0 == this.$endian);
                return this.position += 2,
                t
            }
        },
        t.prototype.readUnsignedByte = function () {
            return this.validate(1) ? this._bytes[this.position++] : void 0
        },
        t.prototype.readUnsignedInt = function () {
            if (this.validate(4)) {
                var t = this.data.getUint32(this._position, 0 == this.$endian);
                return this.position += 4,
                t
            }
        },
        t.prototype.readUnsignedShort = function () {
            if (this.validate(2)) {
                var t = this.data.getUint16(this._position, 0 == this.$endian);
                return this.position += 2,
                t
            }
        },
        t.prototype.readUTF = function () {
            var t = this.readUnsignedShort();
            return t > 0 ? this.readUTFBytes(t) : ""
        },
        t.prototype.readUTFBytes = function (t) {
            if (this.validate(t)) {
                var e = this.data,
                r = new Uint8Array(e.buffer, e.byteOffset + this._position, t);
                return this.position += t,
                this.decodeUTF8(r)
            }
        },
        t.prototype.writeBoolean = function (t) {
            this.validateBuffer(1),
            this._bytes[this.position++] = +t
        },
        t.prototype.writeByte = function (t) {
            this.validateBuffer(1),
            this._bytes[this.position++] = 255 & t
        },
        t.prototype.writeBytes = function (t, e, r) {
            void 0 === e && (e = 0),
            void 0 === r && (r = 0);
            var i;
            0 > e || 0 > r || (i = 0 == r ? t.length - e : Math.min(t.length - e, r), i > 0 && (this.validateBuffer(i), this._bytes.set(t._bytes.subarray(e, e + i), this._position), this.position = this._position + i))
        },
        t.prototype.writeDouble = function (t) {
            this.validateBuffer(8),
            this.data.setFloat64(this._position, t, 0 == this.$endian),
            this.position += 8
        },
        t.prototype.writeFloat = function (t) {
            this.validateBuffer(4),
            this.data.setFloat32(this._position, t, 0 == this.$endian),
            this.position += 4
        },
        t.prototype.writeInt = function (t) {
            this.validateBuffer(4),
            this.data.setInt32(this._position, t, 0 == this.$endian),
            this.position += 4
        },
        t.prototype.writeShort = function (t) {
            this.validateBuffer(2),
            this.data.setInt16(this._position, t, 0 == this.$endian),
            this.position += 2
        },
        t.prototype.writeUnsignedInt = function (t) {
            this.validateBuffer(4),
            this.data.setUint32(this._position, t, 0 == this.$endian),
            this.position += 4
        },
        t.prototype.writeUnsignedShort = function (t) {
            this.validateBuffer(2),
            this.data.setUint16(this._position, t, 0 == this.$endian),
            this.position += 2
        },
        t.prototype.writeUTF = function (t) {
            var e = this.encodeUTF8(t),
            r = e.length;
            this.validateBuffer(2 + r),
            this.data.setUint16(this._position, r, 0 == this.$endian),
            this.position += 2,
            this._writeUint8Array(e, !1)
        },
        t.prototype.writeUTFBytes = function (t) {
            this._writeUint8Array(this.encodeUTF8(t))
        },
        t.prototype.toString = function () {
            return "[ByteArray] length:" + this.length + ", bytesAvailable:" + this.bytesAvailable
        },
        t.prototype._writeUint8Array = function (t, e) {
            void 0 === e && (e = !0);
            var r = this._position,
            i = r + t.length;
            e && this.validateBuffer(i),
            this.bytes.set(t, r),
            this.position = i
        },
        t.prototype.validate = function (t) {
            var e = this._bytes.length;
            return e > 0 && this._position + t <= e ? !0 : void console.error(1025)
        },
        t.prototype.validateBuffer = function (t) {
            this.write_position = t > this.write_position ? t : this.write_position,
            t += this._position,
            this._validateBuffer(t)
        },
        t.prototype.encodeUTF8 = function (t) {
            for (var e = 0, r = this.stringToCodePoints(t), i = []; r.length > e; ) {
                var n = r[e++];
                if (this.inRange(n, 55296, 57343))
                    this.encoderError(n);
                else if (this.inRange(n, 0, 127))
                    i.push(n);
                else {
                    var s = void 0,
                    a = void 0;
                    for (this.inRange(n, 128, 2047) ? (s = 1, a = 192) : this.inRange(n, 2048, 65535) ? (s = 2, a = 224) : this.inRange(n, 65536, 1114111) && (s = 3, a = 240), i.push(this.div(n, Math.pow(64, s)) + a); s > 0; ) {
                        var o = this.div(n, Math.pow(64, s - 1));
                        i.push(128 + o % 64),
                        s -= 1
                    }
                }
            }
            return new Uint8Array(i)
        },
        t.prototype.decodeUTF8 = function (t) {
            for (var e, r = !1, i = 0, n = "", s = 0, a = 0, o = 0, h = 0; t.length > i; ) {
                var f = t[i++];
                if (f == this.EOF_byte)
                    e = 0 != a ? this.decoderError(r) : this.EOF_code_point;
                else if (0 == a)
                    this.inRange(f, 0, 127) ? e = f : (this.inRange(f, 194, 223) ? (a = 1, h = 128, s = f - 192) : this.inRange(f, 224, 239) ? (a = 2, h = 2048, s = f - 224) : this.inRange(f, 240, 244) ? (a = 3, h = 65536, s = f - 240) : this.decoderError(r), s *= Math.pow(64, a), e = null);
                else if (this.inRange(f, 128, 191))
                    if (o += 1, s += (f - 128) * Math.pow(64, a - o), o !== a)
                        e = null;
                    else {
                        var u = s,
                        c = h;
                        s = 0,
                        a = 0,
                        o = 0,
                        h = 0,
                        e = this.inRange(u, c, 1114111) && !this.inRange(u, 55296, 57343) ? u : this.decoderError(r, f)
                    }
                else
                    s = 0, a = 0, o = 0, h = 0, i--, e = this.decoderError(r, f);
                null !== e && e !== this.EOF_code_point && (65535 >= e ? e > 0 && (n += String.fromCharCode(e)) : (e -= 65536, n += String.fromCharCode(55296 + (e >> 10 & 1023)), n += String.fromCharCode(56320 + (1023 & e))))
            }
            return n
        },
        t.prototype.encoderError = function (t) {
            console.log(1026, t)
        },
        t.prototype.decoderError = function (t, e) {
            return t && console.log(1027),
            e || 65533
        },
        t.prototype.inRange = function (t, e, r) {
            return t >= e && r >= t
        },
        t.prototype.div = function (t, e) {
            return Math.floor(t / e)
        },
        t.prototype.stringToCodePoints = function (t) {
            for (var e = [], r = 0, i = t.length; r < t.length; ) {
                var n = t.charCodeAt(r);
                if (this.inRange(n, 55296, 57343))
                    if (this.inRange(n, 56320, 57343))
                        e.push(65533);
                    else if (r == i - 1)
                        e.push(65533);
                    else {
                        var s = t.charCodeAt(r + 1);
                        if (this.inRange(s, 56320, 57343)) {
                            var a = 1023 & n,
                            o = 1023 & s;
                            r += 1,
                            e.push(65536 + (a << 10) + o)
                        } else
                            e.push(65533)
                    }
                else
                    e.push(n);
                r += 1
            }
            return e
        },
        t.prototype.compress = function () {
            var t = new Zlib.Deflate(new Uint8Array(this.buffer)),
            e = t.compress();
            this.buffer = e.buffer,
            this._position = 0
        },
        t.prototype.uncompress = function () {
            var t = new Zlib.Inflate(new Uint8Array(this.buffer)),
            e = t.decompress();
            this.buffer = e.buffer,
            this._position = 0
        },
        t.uncompress = function (t) {
            var e = new Zlib.Inflate(new Uint8Array(t)),
            r = e.decompress();
            return r.buffer
        },
        t
    }
    ();
    t.ByteArray = r,
    __reflect(r.prototype, "decoder.ByteArray")
}
(decoder || (decoder = {}));
var decoder;
!function (t) {
    var e = function () {
        function e() {}
        return e.prototype.decode = function (e, r, i, n) {
            function s() {
                if (o.bytesAvailable) {
                    var e = o.readUTF(),
                    h = o.readBoolean(),
                    f = o.readBoolean(),
                    u = o.readUnsignedInt();
                    a = new t.ByteArray,
                    o.readBytes(a, 0, u),
                    f && (a.position = 0, a = new t.ByteArray(t.ByteArray.uncompress(a.buffer)));
                    var c = a.readUTFBytes(a.length);
                    return h && (c = c.replace(/\/\//g, "")),
                    i.call(r, e, c),
                    void setTimeout(s, 1e3 / 60)
                }
                n.call(r)
            }
            var a,
            o = new t.ByteArray(e);
            s()
        },
        e
    }
    ();
    t.ZlibDecoder = e,
    __reflect(e.prototype, "decoder.ZlibDecoder"),
    t.zlibDecoder = new e;
    var r = function () {
        function e() {}
        return e.prototype.decode = function (e) {
            for (var r = {}, i = new t.ByteArray(e); i.bytesAvailable; ) {
                var n = new t.ByteArray,
                s = i.readUTF(),
                a = i.readInt();
                i.readBytes(n, 0, a);
                var o = new amf.Deserializer(new Uint8Array(n.buffer));
                r[s] = o.readObject()
            }
            return i.clear(), r
        },
        e
    }
    ();
    t.AMFDecoder = r,
    __reflect(r.prototype, "decoder.AMFDecoder"),
    t.amfDecoder = new r
}
(decoder || (decoder = {}));
var decoder;
!function (t) {
    var e = function (t) {
        function e(e) {
            var r = t.call(this, e) || this;
            return r.Endian = {
                BIG: 0,
                LITTLE: 1
            },
            r.ObjectEncoding = {
                AMF0: 0,
                AMF3: 3
            },
            r.Amf3Types = {
                kUndefinedType: 0,
                kNullType: 1,
                kFalseType: 2,
                kTrueType: 3,
                kIntegerType: 4,
                kDoubleType: 5,
                kStringType: 6,
                kXMLType: 7,
                kDateType: 8,
                kArrayType: 9,
                kObjectType: 10,
                kAvmPlusXmlType: 11,
                kByteArrayType: 12
            },
            r.objectTable = [],
            r.stringTable = [],
            r.traitTable = [],
            r.buffer = e,
            r
        }
        return __extends(e, t),
        e.prototype.readObject = function () {
            var t = this,
            e = t.readAMF3Object();
            return t.clean(),
            e
        },
        e.prototype.readAMF3Object = function () {
            var t = this,
            e = t.readByte();
            if (e != t.Amf3Types.kUndefinedType) {
                if (e == t.Amf3Types.kNullType)
                    return null;
                if (e == t.Amf3Types.kFalseType)
                    return !1;
                if (e == t.Amf3Types.kTrueType)
                    return !0;
                if (e == t.Amf3Types.kIntegerType) {
                    var r = t.readUInt29();
                    return r
                }
                if (e == t.Amf3Types.kDoubleType) {
                    var i = t.readDouble();
                    return i
                }
                if (e == t.Amf3Types.kStringType) {
                    var n = t.readStringAMF3();
                    return n
                }
                if (e == t.Amf3Types.kXMLType);
                else {
                    if (e == t.Amf3Types.kDateType) {
                        var s = t.readUInt29();
                        if (0 == (1 & s))
                            return t.objectTable[s >> 1];
                        var a = t.readDouble(),
                        o = new Date(a);
                        return t.objectTable.push(o),
                        o
                    }
                    if (e == t.Amf3Types.kArrayType) {
                        var s = t.readUInt29();
                        if (0 == (1 & s))
                            return t.objectTable[s >> 1];
                        var h = s >> 1,
                        f = t.readStringAMF3();
                        if ("" == f) {
                            for (var u = [], c = 0; h > c; c++) {
                                var o = t.readAMF3Object();
                                u.push(o)
                            }
                            return u
                        }
                        for (var d = {}; "" != f; )
                            d[f] = t.readAMF3Object(), f = t.readStringAMF3();
                        for (var p = 0; h > p; p++)
                            d[p] = t.readAMF3Object();
                        return d
                    }
                    if (e == t.Amf3Types.kObjectType) {
                        var l = {};
                        t.objectTable.push(l);
                        var s = t.readUInt29();
                        if (0 == (1 & s))
                            return t.objectTable[s >> 1];
                        var y = t.readTraits(s),
                        b = (y.className, y.externalizable);
                        if (b)
                            l = t.readAMF3Object();
                        else {
                            for (var h = y.properties.length, g = 0; h > g; g++) {
                                var w = y.properties[g],
                                v = t.readAMF3Object();
                                l[w] = v
                            }
                            if (y.dynamic)
                                for (; ; ) {
                                    var A = t.readStringAMF3();
                                    if (null == A || 0 == A.length)
                                        break;
                                    var _ = t.readAMF3Object();
                                    l[A] = _
                                }
                        }
                        return l
                    }
                    if (e == t.Amf3Types.kByteArrayType) {
                        var s = t.readUInt29();
                        if (0 == (1 & s))
                            return t.objectTable[s >> 1];
                        var h = s >> 1,
                        T = new egret.ByteArray;
                        t.objectTable.push(T);
                        for (var U = 0; h > U; U++)
                            T.writeByte(t.readByte());
                        return T
                    }
                }
            }
        },
        e.prototype.clean = function () {
            var t = this;
            t.objectTable.length = 0,
            t.stringTable.length = 0,
            t.traitTable.length = 0
        },
        e.prototype.readUInt29 = function () {
            var t,
            e = this,
            r = 255 & e.readByte();
            return 128 > r ? r : (t = (127 & r) << 7, r = 255 & e.readByte(), 128 > r ? t | r : (t = (t | 127 & r) << 7, r = 255 & e.readByte(), 128 > r ? t | r : (t = (t | 127 & r) << 8, r = 255 & e.readByte(), t | r)))
        },
        e.prototype.readStringAMF3 = function () {
            var t = this,
            e = t.readUInt29();
            if (0 == (1 & e))
                return t.stringTable[e >> 1];
            var r = e >> 1;
            if (0 == r)
                return "";
            var i = t.readString(r);
            return t.stringTable.push(i),
            i
        },
        e.prototype.readString = function (t) {
            var e = this,
            r = e.readUTFBytes(t);
            return r
        },
        e.prototype.readTraits = function (t) {
            var e = this,
            r = {};
            if (r.properties = [], 1 == (3 & t))
                return e.traitTable[t >> 2];
            r.externalizable = 4 == (4 & t),
            r.dynamic = 8 == (8 & t);
            r.count = t >> 4,
            r.className = e.readStringAMF3(),
            e.traitTable.push(r);
            for (var i = 0; i < r.count; i++) {
                var n = e.readStringAMF3();
                r.properties.push(n)
            }
            return r
        },
        e.prototype.readLongUTF = function () {
            var t = this;
            return t.readString(t.readUInt30())
        },
        e.prototype.readUInt30 = function () {
            var t = this,
            e = t.readByte(),
            r = t.readByte(),
            i = t.readByte(),
            n = t.readByte();
            return e >= 64 ? void 0 : n | i << 8 | r << 16 | e << 24
        },
        e
    }
    (egret.ByteArray);
    t.CByteArray = e,
    __reflect(e.prototype, "decoder.CByteArray")
}
(decoder || (decoder = {}));
